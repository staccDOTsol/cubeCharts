<head>
   
</head>
<script src="https://code.jquery.com/jquery-1.9.1.js"></script>
<script src="https://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>

<!-- Resources -->
<script src="https://www.amcharts.com/lib/3/amcharts.js"></script>
<script src="https://www.amcharts.com/lib/3/serial.js"></script>
<script src="https://www.amcharts.com/lib/3/plugins/dataloader/dataloader.min.js"></script>
<script src="https://www.amcharts.com/lib/3/plugins/export/export.min.js"></script>
<link rel="stylesheet" href="https://www.amcharts.com/lib/3/plugins/export/export.css" type="text/css" media="all" />
<script src="https://www.amcharts.com/lib/3/themes/light.js"></script>
<style>
    #chartdiv {
        width: 100%;
        height: 500px;
    }
</style>

<script src="https://code.highcharts.com/stock/highstock.js"></script>
<script src="https://code.highcharts.com/stock/modules/exporting.js"></script>
<script src="https://code.highcharts.com/stock/modules/export-data.js"></script>
Cube Exchange Live Market Data <div id='roc'></div>
<div id="container0" style="height: 500px; min-width: 310px"></div>
<div id="container1" style="height: 500px; min-width: 310px"></div>
<div id="container2" style="height: 500px; min-width: 310px"></div>
<div id="container3" style="height: 500px; min-width: 310px"></div>
<div id="container4" style="height: 500px; min-width: 310px"></div>
<div id="container5" style="height: 500px; min-width: 310px"></div>
<div id="container6" style="height: 500px; min-width: 310px"></div>
<div id="container7" style="height: 500px; min-width: 310px"></div>
<div id="container8" style="height: 500px; min-width: 310px"></div>
<div id="container9" style="height: 500px; min-width: 310px"></div>
<div id="container10" style="height: 500px; min-width: 310px"></div>
<div id="container11" style="height: 500px; min-width: 310px"></div>
<div id="container12" style="height: 500px; min-width: 310px"></div>
<div id="container13" style="height: 500px; min-width: 310px"></div>
<div id="container14" style="height: 500px; min-width: 310px"></div>
<div id="container15" style="height: 500px; min-width: 310px"></div>
<div id="container16" style="height: 500px; min-width: 310px"></div>
<div id="container17" style="height: 500px; min-width: 310px"></div>

<script>

var chart = []

    var prices = [];
    var rois = [];
    var lasks = []; 
        var asks = {}
    var bids = {}
let options = []

var first =true 
        for (var i = 0 ; i< 17; i++){

        }
        var pos = []
        var tar = []
        var avail = []
        var tar15 = []
        var ntar15 = []
        var tar3 = []
        var ntar3 = []
        var equity = []
        var perc = []
        var derivs = []
        var fperc;
    $(document).ready(function() {
        console.log("ready!");
        var quoinexAsks = []
        var quoinexBids = []
           //chart = Highcharts.stockChart('container', options);
           $.getJSON('https://cube-charts-656379ba68ad.herokuapp.com/update?name=test', function(jsondata) {
                let tops = jsondata.topOfBooks.tops 
                let i = -1
                if (first){
                    for (var top of tops){ 
                        i++
                        bids[top.marketId]=([[Math.floor(parseFloat(top.transactTime) / 1000000), parseFloat(top.bidPrice)]])
                        asks[top.marketId]=([[Math.floor(parseFloat(top.transactTime) / 1000000), parseFloat(top.askPrice)]])
                        

                        options[parseInt(top.marketId)-1] =     {    rangeSelector: {
            buttons: [{
                count: 1,
                type: 'minute',
                text: '1m'
            }, {
                count: 5,
                type: 'minute',
                text: '5m'
            }, {
                count: 7,
                type: 'minute',
                text: '7m'
            }, {
                count: 14,
                type: 'minute',
                text: '14m'
            }, {
                count: 1,
                type: 'hour',
                text: '1h'
            }, {
                type: 'all',
                text: 'All',
            
            }],

            inputEnabled: false,
            selected: 5
        },


        title: {
            text: 'Price'
        },


        yAxis: [{
            labels: {
                align: 'right',
                x: -3
            },
            title: {
                text: 'Price'
            },
            height: '100%',
            lineWidth: 2,
            resize: {
                enabled: true
            }
        }],

        tooltip: {
            split: true
        },
        series: [{
                name: 'Bids',
  data: bids[parseInt(top.marketId)-1],
                color: '#FFFF00'
            },{
                name: 'Asks',
  data: asks[parseInt(top.marketId)-1],
                color: '#00FF00'
            }
        ]
        }        
                    
                      
console.log('container'+i.toString())
         chart[parseInt(top.marketId)-1]=( Highcharts.stockChart('container'+(parseFloat(top.marketId)-1).toString(), options[parseFloat(top.marketId)-1]))

                    }
                    first = false
                }
                    else {
                    for (var top of tops){ 
  chart[parseInt(top.marketId)-1].series[0].setData(bids[top.marketId]); // Update bid data
  chart[parseInt(top.marketId)-1].series[1].setData(asks[top.marketId]); 
                    }
                }
                console.log(asks)
            }); 
        setInterval(function() {
            //chart = Highcharts.stockChart('container', options);
            $.getJSON('https://cube-charts-656379ba68ad.herokuapp.com/update?name=test', function(jsondata) {
                let tops = jsondata.topOfBooks.tops 
                let i = -1
                if (first){
                    for (var top of tops){ 
                        i++
                        bids[top.marketId]=([[Math.floor(parseFloat(top.transactTime) / 1000000), parseFloat(top.bidPrice)]])
                        asks[top.marketId]=([[Math.floor(parseFloat(top.transactTime) / 1000000), parseFloat(top.askPrice)]])
                        

                        options[parseInt(top.marketId)-1] =     {    rangeSelector: {
            buttons: [{
                count: 1,
                type: 'minute',
                text: '1m'
            }, {
                count: 5,
                type: 'minute',
                text: '5m'
            }, {
                count: 7,
                type: 'minute',
                text: '7m'
            }, {
                count: 14,
                type: 'minute',
                text: '14m'
            }, {
                count: 1,
                type: 'hour',
                text: '1h'
            }, {
                type: 'all',
                text: 'All',
            
            }],

            inputEnabled: false,
            selected: 5
        },


        title: {
            text: 'Price'
        },


        yAxis: [{
            labels: {
                align: 'right',
                x: -3
            },
            title: {
                text: 'Price'
            },
            height: '100%',
            lineWidth: 2,
            resize: {
                enabled: true
            }
        }],

        tooltip: {
            split: true
        },
        series: [{
                name: 'Bids',
  data: bids[parseInt(top.marketId)-1],
                color: '#FFFF00'
            },{
                name: 'Asks',
  data: asks[parseInt(top.marketId)-1],
                color: '#00FF00'
            }
        ]
        }        
                    
                      
console.log('container'+i.toString())
         chart[parseInt(top.marketId)-1]=( Highcharts.stockChart('container'+(parseFloat(top.marketId)-1).toString(), options[parseFloat(top.marketId)-1]))

                    }
                    first = false
                }
                    else {
                    for (var top of tops){ 
  chart[parseInt(top.marketId)-1].series[0].setData(bids[top.marketId]); // Update bid data
  chart[parseInt(top.marketId)-1].series[1].setData(asks[top.marketId]); 
                    }
                }
                console.log(asks)
            }); 
        }, 15000);
    });

    var trade = [],
        vol = [],
        i = 0;

    i = 0;

    i = 0;
</script>
